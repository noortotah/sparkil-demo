{"version":3,"sources":["components/login/Login.js","components/lenders/DownloadExcel.js","store/actions/actionTypes.js","components/lenders/LenderSearch.js","store/actions/lendersActions.js","components/lenders/LenderItem.js","components/lenders/LendersList.js","components/lenders/Lenders.js","components/projects/Projects.js","layouts/Header.js","layouts/Layout.js","App.js","store/reducers/LendersReducer.js","store/reducers/index.js","index.js"],"names":["Login","props","className","style","height","to","src","alt","method","onSubmit","event","history","preventDefault","toast","success","push","pathname","loginHandler","htmlFor","type","name","id","aria-describedby","placeholder","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","connect","state","$lenders","lendersReducer","lenders","withRouter","hideElement","filename","data","label","value","SEARCH_LENDERS","FILTER_LENDERS","$totalNumberOfLoans","totalNumberOfLoans","$totalAmountOfLoans","totalAmountOfLoans","dispatch","$searchLenders","SearchBy","SearchValue","actionTypes","searchBy","searchValue","$filterLenders","settings","filterLenders","initialState","useReducer","target","formData","setFormData","Row","Col","md","onChange","defaultValue","onClick","amount_total_amount","Dropdown","Toggle","Menu","width","sm","aria-label","toLocaleString","LenderItem","scope","rowSpan","lender","supportedProjects","length","index","email","registrationDate","numberOfLoans","totalLoans","balance","categories","join","loan","repayment","map","project","projectIndex","Lenders","Container","Projects","Header","data-toggle","data-target","aria-controls","aria-expanded","Layout","path","component","DownloadExcel","App","from","exact","LendersReducer","action","filter","toLowerCase","includes","find","element","isReturned","total_amount_direction","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8222e9f1.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst loginHandler = (event, history) => {\n    event.preventDefault();\n    toast.success('Login Successfully!');\n    history.push({\n        pathname: '/lenders'\n    });\n\n}\nconst Login = (props) => {\n  return (\n      <div className=\"login-container\" style={{height: '600px'}}>\n          <div className=\"container h-100\">\n            <div className=\"row h-100 d-flex justify-content-center align-items-center\">\n                <div className=\"col-md-6 m-auto p-5\">\n                <NavLink className=\"d-block text-center mb-4\" to=\"/\">\n                    <img src=\"spark_logo.svg\" alt=\"spark-logo\"/>\n                </NavLink>\n                  <form method=\"post\" onSubmit={(event) => loginHandler(event,props.history)}>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"email\">Email address</label>\n                      <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n                      {/* <small id=\"emailHelp\" className=\"form-text text-muted\">\n                        Email that you have used while registration.\n                      </small> */}\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"password\">Password</label>\n                      <input type=\"password\" name=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" />\n                    </div>\n                    {/* <div className=\"form-check\">\n                      <input type=\"checkbox\" name=\"checkbox\" className=\"form-check-input\" id=\"remember\" />\n                      <label className=\"form-check-label\" htmlFor=\"remember\">\n                        Remember me\n                      </label>\n                    </div> */}\n                    <button type=\"submit\" className=\"col-2 btn btn-primary float-right\">\n                      Login\n                    </button>\n                  </form>\n                </div>\n            </div>\n            </div>\n      </div>\n    \n  );\n};\n\nexport default Login;\n","import { Fragment } from \"react\";\nimport ReactExport from \"react-export-excel\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst DownloadExcel = (props) => {\n  return (\n    <Fragment>\n      <h3 className=\"text-center mt-5 pt-5 text-secondary\">Download Document...</h3>\n      <ExcelFile hideElement={true} filename=\"sparkIL_lenders\">\n        <ExcelSheet data={props.$lenders} name=\"lenders\">\n          <ExcelColumn label=\"Name\" value=\"name\" />\n          <ExcelColumn label=\"Email\" value=\"email\" />\n          <ExcelColumn label=\"Registration\" value=\"registrationDate\" />\n          <ExcelColumn label=\"# of loans\" value=\"numberOfLoans\" />\n          <ExcelColumn label=\"Total loans\" value=\"totalLoans\" />\n          <ExcelColumn label=\"Balance\" value=\"balance\" />\n        </ExcelSheet>\n      </ExcelFile>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    $lenders: state.lendersReducer.lenders,\n  };\n};\nexport default connect(mapStateToProps)(withRouter(DownloadExcel));\n","export const SEARCH_LENDERS = 'SEARCH_LENDERS';\nexport const FILTER_LENDERS = 'FILTER_LENDERS';\n","import { useReducer } from \"react\";\nimport { Col, Dropdown, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { filterLenders, searchLenders } from \"../../store/actions\";\nimport styles from \"./LenderSearch.scss\";\n\nconst LenderSearch = (props) => {\n    const initialState = {\n        searchBy: \"lender-name\",\n        searchValue: \"\",\n\n      };\n\n  const formReducer = (state, event) => {\n    if(event.type === 'RESET_ALL'){\n        return {\n            ...initialState\n        };\n    }\n    else if(event.type === 'RESET_SEARCH'){\n        return {\n            ...state,\n            searchValue : event.searchValue\n        };\n    }else{\n        return {\n            ...state,\n            [event.target.name]: event.target.value,\n          };\n    }\n    \n  };\n  const [formData, setFormData] = useReducer(formReducer, initialState);\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    props.$searchLenders(formData.searchBy, formData.searchValue);\n  };\n\n  const handleFilter = (event) => {\n    event.preventDefault();\n    props.$filterLenders(formData);\n  };\n\n  const handleSearchValue = (event) => {\n      event.preventDefault();\n      setFormData({\n        type: 'RESET_SEARCH',\n        searchValue: \"\",\n        amount_total_amount: \"\",\n\n      })\n  }\n\n  const handleReset = (event) => {\n    event.preventDefault();\n    setFormData({\n      type: 'RESET_ALL'\n    })\n}\n  return (\n    <Row>\n      <Col md={9} className=\"px-0\">\n        <div className=\"bg-light p-5\">\n          <form className=\"form-inline\" onSubmit={handleSearch}>\n            <div className=\"col-12 mb-3\">\n              <i className=\"search-icon\"></i> &nbsp; Search by: &nbsp;\n              <select\n                name=\"searchBy\"\n                className=\"form-select search-by\"\n                onChange={setFormData}\n                defaultValue=\"lender-name\"\n              >\n                <option value=\"lender-name\">Lender's name</option>\n                <option value=\"lender-email\">Lender's email</option>\n                <option value=\"project-name\">project's name</option>\n              </select>\n              <input\n                type=\"text\"\n                name=\"searchValue\"\n                value={formData.searchValue}\n                onChange={setFormData}\n                className=\"form-control form-control-sm\"\n                placeholder=\"Mark...\"\n              />\n              <button\n                type=\"submit\"\n                className=\"ml-2 btn btn-primary btn-sm col-2\"\n              >\n                Search\n              </button>\n              { formData.searchValue &&  <div className=\"ml-2 px-2 bg-semi-light d-inline\"> <small>Search for: \"{formData.searchValue}\" <button type=\"button\" onClick={handleSearchValue} className=\"ml-2 mb-1 btn btn-link btn-sm\">x</button></small></div> }\n              \n            </div>\n            </form>\n            <form onSubmit={handleFilter}>\n            <div className=\"col-12\">\n              <i className=\"filter-icon\"></i> &nbsp; Filter by: &nbsp;\n              <Dropdown className=\"d-inline\">\n                <Dropdown.Toggle\n                  className=\"btn btn-link btn-sm bg-transparent border-0\"\n                  id=\"dropdown-total-amount\"\n                >\n                  Total Amount\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu className=\"dropdown-menu-filters\" style={{ width: \"200px\" }}>\n                  <div className=\"col p-3\">\n                    <Row className=\"text-center\">\n                      <Col sm={6}>\n                        <div className=\"custom-control custom-radio custom-control-inline\">\n                          <input\n                            type=\"radio\"\n                            id=\"total_amount_under\"\n                            name=\"total_amount_direction\"\n                            value=\"under\"\n                            onChange={setFormData}\n                            className=\"custom-control-input\"\n                          />\n                          <label\n                            className=\"custom-control-label\"\n                            htmlFor=\"total_amount_under\"\n                          >\n                            Under\n                          </label>\n                        </div>\n                      </Col>\n                      <Col sm={6}>\n                        <div className=\"custom-control custom-radio custom-control-inline\">\n                          <input\n                            type=\"radio\"\n                            id=\"total_amount_over\"\n                            name=\"total_amount_direction\"\n                            value=\"over\"\n                            onChange={setFormData}\n                            className=\"custom-control-input\"\n                          />\n                          <label\n                            className=\"custom-control-label\"\n                            htmlFor=\"total_amount_over\"\n                          >\n                            Over\n                          </label>\n                        </div>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col>\n                        <div className=\"input-group my-3\">\n                          <div className=\"input-group-prepend\">\n                            <span\n                              className=\"input-group-text text-success pl-0\"\n                              id=\"basic-addon1\"\n                            >\n                              $\n                            </span>\n                          </div>\n                          <input\n                            type=\"text\"\n                            className=\"form-control amount-total-amount\"\n                            name=\"amount-total-amount\"\n                            onChange={setFormData}\n                            placeholder=\"30000\"\n                            aria-label=\"amount\"\n                            aria-describedby=\"basic-addon1\"\n                          />\n                        </div>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col>\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-link text-purple float-right\"\n                        >\n                          Go\n                        </button>\n                      </Col>\n                    </Row>\n                  </div>\n                </Dropdown.Menu>\n              </Dropdown>\n              <Dropdown className=\"d-inline\">\n                <Dropdown.Toggle\n                  className=\"btn btn-link btn-sm bg-transparent border-0\"\n                  id=\"dropdown-basic\"\n                >\n                  Project Status\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu  className=\"dropdown-menu-filters\" style={{ width: \"200px\" }}>\n                  <div className=\"col p-3\">\n                  <Row className=\"\">\n                      <Col>\n                        <div className=\"custom-control custom-radio custom-control-inline\">\n                          <input\n                            type=\"radio\"\n                            id=\"project-status-fundraising\"\n                            name=\"project_status\"\n                            value=\"fundraising\"\n                            onChange={setFormData}\n                            className=\"custom-control-input\"\n                          />\n                          <label\n                            className=\"custom-control-label\"\n                            htmlFor=\"project-status-fundraising\"\n                          >\n                            Fundraising\n                          </label>\n                        </div>\n                      </Col>\n                      <Col>\n                        <div className=\"custom-control custom-radio custom-control-inline\">\n                          <input\n                            type=\"radio\"\n                            id=\"project-status-repayments\"\n                            name=\"project_status\"\n                            value=\"repayments\"\n                            onChange={setFormData}\n                            className=\"custom-control-input\"\n                          />\n                          <label\n                            className=\"custom-control-label\"\n                            htmlFor=\"project-status-repayments\"\n                          >\n                            Repayments\n                          </label>\n                        </div>\n                      </Col>\n                      <Col>\n                        <div className=\"custom-control custom-radio custom-control-inline\">\n                          <input\n                            type=\"radio\"\n                            id=\"project-status-finished\"\n                            name=\"project_status\"\n                            value=\"finished\"\n                            onChange={setFormData}\n                            className=\"custom-control-input\"\n                          />\n                          <label\n                            className=\"custom-control-label\"\n                            htmlFor=\"project-status-finished\"\n                          >\n                            Finished\n                          </label>\n                        </div>\n                      </Col>\n                    \n                    </Row>\n                    <Row>\n                        <Col>\n                        <button type=\"submit\" className=\"btn btn-link text-purple float-right\">\n                        Go\n                    </button>\n                    </Col>\n                    </Row>\n                    \n                  </div>\n                </Dropdown.Menu>\n              </Dropdown>\n              <Dropdown className=\"d-inline\">\n                <Dropdown.Toggle\n                  className=\"btn btn-link btn-sm bg-transparent border-0\"\n                  id=\"dropdown-basic\"\n                >\n                  Category\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  <div><p className=\"px-2 text-center\">Comming Soon!</p></div>\n                </Dropdown.Menu>\n              </Dropdown>\n              <button type=\"submit\" className=\"btn btn-link text-purple\">\n                Go\n              </button>\n              {/* <button onClick={handleReset} type=\"button\" className=\"btn btn-link text-danger\">\n                Reset\n              </button> */}\n            </div>\n          </form>\n        </div>\n      </Col>\n      <Col md={3} className=\"pr-0\">\n        <div className=\"bg-light px-3 py-5\">\n          <div className=\"col-12 mb-3\">\n            <h6 className=\"text-purple mb-0\">\n              {props.$totalNumberOfLoans.toLocaleString()}\n            </h6>\n            <small>Total number of loans</small>\n          </div>\n          <div className=\"col-12\">\n            <h6 className=\"text-success mb-0\">\n              ${props.$totalAmountOfLoans.toLocaleString()}\n            </h6>\n            <small>Total amount of loans</small>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    $totalNumberOfLoans: state.lendersReducer.totalNumberOfLoans,\n    $totalAmountOfLoans: state.lendersReducer.totalAmountOfLoans,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    $searchLenders: (SearchBy, SearchValue) =>\n      dispatch(searchLenders(SearchBy, SearchValue)),\n    $filterLenders: (settings) =>\n      dispatch(filterLenders(settings)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LenderSearch);\n","import * as actionTypes from './actionTypes';\n\nexport const searchLenders = (searchBy, searchValue) => {\n    return {\n        type: actionTypes.SEARCH_LENDERS,\n        searchBy,\n        searchValue\n    }\n\n}\n\nexport const filterLenders = (settings) => {\n    return {\n        type: actionTypes.FILTER_LENDERS,\n        settings\n    }\n\n}\n","import { Fragment } from \"react\";\nimport styles from \"./LendersList.scss\";\n\nconst LenderItem = (props) => {\n  return (\n    <Fragment>\n      <tr className=\"bg-light mb-2\">\n        <th scope=\"row\" rowSpan={props.lender.supportedProjects.length }>\n          {props.index + 1}.\n        </th>\n        <td className=\"font-weight-500\" rowSpan={props.lender.supportedProjects.length }>\n          {props.lender.name}\n        </td>\n        <td rowSpan={props.lender.supportedProjects.length }>{props.lender.email}</td>\n        <td rowSpan={props.lender.supportedProjects.length }>{props.lender.registrationDate}</td>\n        <td className=\"text-purple font-weight-500\" rowSpan={props.lender.supportedProjects.length  }>\n          {props.lender.numberOfLoans}\n        </td>\n        <td className=\"text-purple font-weight-500\" rowSpan={props.lender.supportedProjects.length  }>\n          ${props.lender.totalLoans.toLocaleString()}\n        </td>\n        <td rowSpan={props.lender.supportedProjects.length }>\n          <p className=\"mb-0 py-3 balance-border text-success font-weight-500\">\n            ${props.lender.balance.toLocaleString()}\n          </p>\n        </td>\n\n        <td className=\"font-weight-500\">\n          <i className={props.lender.supportedProjects[0].type+'-icon'}></i>“\n          {props.lender.supportedProjects[0].name}”\n        </td>\n        <td>{props.lender.supportedProjects[0].categories.join(\", \")}</td>\n        <td className=\"font-weight-500\">\n          ${props.lender.supportedProjects[0].loan.toLocaleString()}\n        </td>\n        <td>\n          <p className=\"mb-1 font-weight-500\">\n            ${props.lender.supportedProjects[0].repayment.toLocaleString()} repayed\n          </p>\n          <small className=\"text-muted font-weight-light\">\n            ($\n            {(props.lender.supportedProjects[0].loan -\n              props.lender.supportedProjects[0].repayment).toLocaleString()}{\" \"}\n            left)\n          </small>\n        </td>\n      </tr>\n\n      {props.lender.supportedProjects.map((project, projectIndex) => (\n          ( projectIndex > 0 && <tr key={props.lender.id+projectIndex} className=\"bg-light\">\n            <td className=\"font-weight-500\">\n              <i className={project.type+'-icon'}></i>“{project.name}”\n            </td>\n            <td>{project.categories.join(\", \")}</td>\n            <td className=\"font-weight-500\">${project.loan.toLocaleString()}</td>\n            <td>\n              <p className=\"mb-1 font-weight-500\">\n                ${project.repayment.toLocaleString()} repayed\n              </p>\n              <small className=\"text-muted font-weight-light\">\n                (${(project.loan - project.repayment).toLocaleString()} left)\n              </small>\n            </td>\n          </tr> )\n      ))}\n\n      <tr className=\"separator\"></tr>\n    </Fragment>\n  );\n};\n\nexport default LenderItem;\n","import { Fragment } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Route, withRouter } from \"react-router-dom\";\nimport DownloadExcel from \"./DownloadExcel\";\nimport LenderItem from \"./LenderItem\";\n\nimport styles from \"./LendersList.scss\";\n\nconst LendersList = (props) => {\n  return (\n    <Fragment>\n      <Row>\n        <Col className=\"pl-0 py-3\">\n          <div>\n            <div className=\"fund-type d-inline mr-4\">\n              <i className=\"fundraising-icon\"></i>\n              Fundraising\n            </div>\n            <div className=\"fund-type d-inline mr-4\">\n              <i className=\"repayments-icon\"></i>\n              Repayments\n            </div>\n            <div className=\"fund-type d-inline mr-4\">\n              <i className=\"finished-icon\"></i>\n              Finished\n            </div>\n            <NavLink\n              target=\"_blank\"\n              to={{ pathname: \"/download-excel\" }}\n              className=\"float-right text-success\"\n            >\n              <i className=\"excel-icon mr-1\"></i>\n              Export\n            </NavLink>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"pl-0\">\n          {!props.$lenders.length && (\n            <div className=\"p-5 text-center\">\n              <h4>No lenders found!</h4>\n            </div>\n          )}\n          {!!props.$lenders.length && (\n            <div className=\"table-responsive\">\n              <table className=\"table border-0 text-left\">\n                <thead>\n                  <tr>\n                    <th></th>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Registration</th>\n                    <th style={{ width: \"1%\" }}># of Loans</th>\n                    <th> Total Loans</th>\n                    <th>Balance</th>\n                    <th>Supported projects</th>\n                    <th>Categories</th>\n                    <th>Loan</th>\n                    <th style={{ width: \"12%\" }}>Repayments</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {props.$lenders.map((lender, index) => (\n                    <LenderItem key={lender.id} index={index} lender={lender} />\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </Col>\n      </Row>\n      {/* <Route target=\"_blank\" path=\"/download-excel\"  component={DownloadExcel} /> */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    $lenders: state.lendersReducer.lenders,\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(LendersList));\n","import { Container, Row } from \"react-bootstrap\";\nimport LenderSearch from \"./LenderSearch\";\nimport LendersList from \"./LendersList\";\n\nconst Lenders = () => {\n    return ( \n        <Container>\n            <Row>\n               <h4 className=\"my-4\">Lenders</h4> \n            </Row>\n            <LenderSearch />\n            <LendersList />\n        </Container>\n     );\n}\nexport default Lenders;","import { Col, Container, Row } from \"react-bootstrap\";\n\nconst Projects = () => {\n    return ( \n        <Container>\n            <Row>\n               <h4 className=\"my-4\">Projects</h4> \n            </Row>\n            <Row>\n      <Col md={12} className=\"px-0\">\n        <div className=\"bg-light p-5\">\n            <h6>Comming Soon!</h6>\n        </div>\n      </Col>\n      </Row>\n            \n        </Container>\n     );\n}\n \nexport default Projects;","import { NavLink } from \"react-router-dom\";\nimport styles from \"./Header.scss\";\n\nconst Header = () => {\n    return ( \n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light px-5\" style={{height: '88px'}}>\n          <NavLink className=\"navbar-brand\" to={{ pathname: \"/\"}}>\n            <img src=\"spark_logo.svg\" alt=\"spark-logo\"/>\n          </NavLink>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\" />\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n                  <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                      <NavLink className=\"nav-link active\" to={{\n                        pathname: \"/lenders\",\n                        }}>\n                        Lenders\n                        <span className=\"badge badge-pill badge-badge\">1</span>\n                      </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                      <NavLink className=\"nav-link\" to=\"/projects\">\n                        Projects\n                      </NavLink>\n                    </li>\n                  \n                  </ul>\n                  <NavLink className=\"btn text-danger logout-link\" to={{\n                        pathname: \"login\",\n                        }}>\n                    Logout \t&nbsp;\n                    <i className=\"logout-icon\"></i>\n                  </NavLink>\n                 \n                </div>\n              </nav>\n     );\n}\n \nexport default Header;","import { Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport DownloadExcel from \"../components/lenders/DownloadExcel\";\nimport Lenders from \"../components/lenders/Lenders\";\nimport Projects from \"../components/projects/Projects\";\nimport Header from \"./Header\";\n\nconst Layout = () => {\n    return ( \n        <Fragment>\n            <Header />\n            <Route path=\"/lenders\" component={Lenders} />\n            <Route path=\"/projects\" component={Projects} /> \n            <Route target=\"_blank\" path=\"/download-excel\"  component={DownloadExcel} />\n        </Fragment>\n        \n        \n     );\n}\n \nexport default Layout;","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/login/Login\";\nimport Layout from \"./layouts/Layout\";\n\nfunction App() {\n  return (\n    <Switch>\n      \n      <Route path=\"/login\" component={Login} />\n      \n      <Redirect from=\"/\" exact to=\"/login\" />\n      <Layout />\n      <Redirect to=\"/not-found\" />\n      \n    </Switch>\n    \n  );\n}\n\nexport default App;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  totalNumberOfLoans: 4,\n  totalAmountOfLoans: 49000,\n  lenders: [\n    {\n      id: 1,\n      name: \"Israel Israeli\",\n      email: \"israel@mail.com\",\n      registrationDate: \"14/09/20\",\n      numberOfLoans: 3,\n      totalLoans: 33000,\n      balance: 4000,\n      supportedProjects: [\n        {\n          name: \"The Negev project\",\n          loan: 10000,\n          repayment: 1000,\n          categories: [\"Periphery\", \"Ethiopian Community\"],\n          type: \"repayments\",\n        },\n        {\n          name: \"Iggy\",\n          loan: 15000,\n          repayment: 2000,\n          categories: [\"LGBTQ\"],\n          type: \"fundraising\",\n        },\n        {\n          name: \"COVID-19\",\n          loan: 8000,\n          repayment: 1000,\n          categories: [\"Health\"],\n          type: \"finished\",\n        },\n      ],\n    },\n    {\n      id: 2,\n      name: \"Mark Tzuki\",\n      email: \"mark@mail.com\",\n      registrationDate: \"29/09/20\",\n      numberOfLoans: 1,\n      totalLoans: 8000,\n      balance: 1000,\n      supportedProjects: [\n        {\n          name: \"The Negev project\",\n          loan: 8000,\n          repayment: 1000,\n          categories: [\"Periphery\", \"Ethiopian Community\"],\n          type: \"repayments\",\n        },\n      ],\n    },\n    {\n      id: 3,\n      name: \"Ella Israela\",\n      email: \"ella@mail.com\",\n      registrationDate: \"03/10/20\",\n      numberOfLoans: 1,\n      totalLoans: 8000,\n      balance: 0,\n      supportedProjects: [\n        {\n          name: \"Iggy\",\n          loan: 8000,\n          repayment: 0,\n          categories: [\"LGBTQ\"],\n          type: \"fundraising\",\n        },\n      ],\n    },\n  ],\n};\n\nconst LendersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SEARCH_LENDERS:\n      return {\n        ...state,\n        lenders: [\n          ...initialState.lenders.filter((lender) => {\n            if (action.searchBy === \"lender-name\") {\n              return lender.name\n                .toLowerCase()\n                .includes(action.searchValue.toLowerCase());\n            } else if (action.searchBy === \"lender-email\") {\n              return lender.email\n                .toLowerCase()\n                .includes(action.searchValue.toLowerCase());\n            } else if (action.searchBy === \"project-name\") {\n              const project = lender.supportedProjects.find((element) =>\n                element.name\n                  .toLowerCase()\n                  .includes(action.searchValue.toLowerCase())\n              );\n              return project ? true : false;\n            }\n            return false;\n          }),\n        ],\n      };\n\n    case actionTypes.FILTER_LENDERS:\n      return {\n        ...state,\n        lenders: [\n\n          ...initialState.lenders.filter((lender) => {\n              let isReturned = true;\n            if(action.settings.total_amount_direction && action.settings['amount-total-amount']){\n                \n                if(action.settings.total_amount_direction === 'under') {\n                    isReturned = isReturned && lender.totalLoans < +action.settings['amount-total-amount'];\n                }else{\n                    isReturned = isReturned && lender.totalLoans > +action.settings['amount-total-amount']; \n                }\n            }\n            if(action.settings['project_status']){\n                const project = lender.supportedProjects.find((element) =>\n                    element.type === action.settings['project_status']\n              );\n              isReturned = isReturned && ( project ? true: false );\n            }\n            return isReturned;\n          }),\n        ],\n      };\n\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default LendersReducer;\n","import { combineReducers } from \"redux\";\nimport lendersReducer from './LendersReducer';\n\nconst reducers = combineReducers({\n    lendersReducer\n})\n\nexport default reducers;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducers from \"./store/reducers\";\n\nconst store = createStore(\n  reducers\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <ToastContainer />\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}